name: Plugin update

on:
  workflow_dispatch:
    inputs:
      repo_owner:
        type: string
        description: Username of the target repository's owner
        required: true
      repo_name:
        type: string
        description: Name of the target repository
        required: true
      repo_id:
        type: string
        description: Id of the target repository
        required: true

jobs:
  build:
    name: Build target repository
    runs-on: ubuntu-20.04
    timeout-minutes: 4
    steps:
      - name: Checkout target plugin repository
        uses: actions/checkout@v3
        with:
          ref: release
          repository: "${{ github.event.inputs.repo_owner }}/${{ github.event.inputs.repo_name }}"

      - name: Setup Node 18
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Setup corepack
        run: |
          corepack enable

      # aliuhook
      # - name: Setup JDK 11
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: 11
      #     distribution: zulu

      # - name: Setup Android SDK
      #   uses: android-actions/setup-android@7c5672355aaa8fde5f97a91aa9a99616d1ace6bc

      - name: Build Plugin
        id: build
        env:
          CI: "true"
        run: |
          # Check if aliucord.json config exists
          if [ ! -f aliucord.json ]; then
            echo "No aliucord.json config present!"
            exit 1
          fi

          # Read dist folder from aliucord.json
          echo "dist_folder=$(jq -r '.distFolder' < aliucord.json)" >> $GITHUB_OUTPUT

          # Run the buildCommand from aliucord.json
          jq -r '.buildCommand' < aliucord.json | sh

          # Make upload artifacts' paths
          artifactPaths=`echo ./aliucord.json ./$(jq -r '.distFolder' < aliucord.json)/*.{zip,json}` # brace expansion
          artifactPaths=`realpath --no-symlinks $artifactPaths | tr '\n' '\\\n` # full path expansion
          echo "artifacts=$artifactPaths" >> $GITHUB_OUTPUT

      - name: Upload plugins
        uses: actions/upload-artifact@v3
        with:
          name: INSECURE-DO-NOT-USE
          retention-days: 3
          if-no-files-found: error
          path: ${{ steps.build.outputs.artifacts }}

  update:
    name: Make/Update PR
    needs: build
    runs-on: ubuntu-20.04
    timeout-minutes: 1
    steps:
      - name: Checkout plugin repo code
        uses: actions/checkout@v3
        with:
          path: code

      - name: Download plugins
        uses: actions/download-artifact@v3
        with:
          name: INSECURE-DO-NOT-USE
          path: build.zip

      - name: Extract plugins
        run: source code/extract.sh

      - name: Test for existing PR
        id: test_existing
        run: source code/test_existing.sh

      - name: Checkout plugin repo data
        uses: actions/checkout@v3
        with:
          path: plugins
          ref: ${{ steps.test_existing.outputs.base_branch }}

      - name: Download target plugin repository
        uses: actions/checkout@v3
        with:
          repository: "${{ github.event.inputs.repo_owner }}/${{ github.event.inputs.repo_name }}"
          path: plugins/repositories/${{ github.event.inputs.repo_id }}

      - name: Update plugins in repo
        run: source code/update.sh

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        if: ${{ steps.test_existing.outputs.base_branch == 'data' }}
        with:
          path: plugins
          base: data
          branch: ${{ steps.test_existing.outputs.branch_name }}
          title: "chore: update ${{ github.event.inputs.repo_owner }}/${{ github.event.inputs.repo_name }}"
          body: "Author: @${{ github.event.inputs.repo_owner }}"
          delete-branch: true
          author: ${{ github.event.inputs.repo_owner }} <${{ github.event.inputs.repo_owner }}@users.noreply.github.com>

      - uses: geekyeggo/delete-artifact@dc8092f14c4245ef6a3501b1669b171c12899167
        with:
          name: INSECURE-DO-NOT-USE
